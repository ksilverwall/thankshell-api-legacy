let AWS = require("aws-sdk");

exports.getUserId = async(claims) => {
    if (claims.identities) {
        let identities = JSON.parse(claims.identities);
        let dynamo = new AWS.DynamoDB.DocumentClient();

        let authId = identities.providerName + ':' + identities.userId;
        let result = await dynamo.get({
            TableName: 'thankshell_user_links',
            Key:{
                'auth_id': authId,
            },
        }).promise();

        if (!result.Item) {
            return null;
        }

        return result.Item['user_id'];
    } else {
        return claims['cognito:username'];
    }
};

exports.getHandler = mainProcess => {
    return async(event, context, callback) => {
        let statusCode = 200;
        let data;

        try {
            let userId = await exports.getUserId(event.requestContext.authorizer.claims);
            if (userId) {
                statusCode = 200;
                data = await mainProcess(userId, event.pathParameters, JSON.parse(event.body), event.requestContext.stage);
            } else {
                statusCode = 403;
                data = {
                    "message": "user id not found",
                };
            }
        } catch(err) {
            console.log(err);

            statusCode = 500;
            data = {
                'message': err.message,
            };
        }

        return {
            statusCode: statusCode,
            headers: {"Access-Control-Allow-Origin": "*"},
            body: JSON.stringify(data),
        };
    };
};
